name: "chinadns-ng"
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: "0 */8 * * *"
env:
  TZ: Asia/Shanghai

jobs:
  job_init:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        run: |
          sudo timedatectl set-timezone "$TZ"

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 1
        
      - name: SSH connection to Actions
        uses: kenzok78/ssh-action@master
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')

  job_auto_update_chinadns_ng:
    if: ${{ always() }}
    needs: job_init
    runs-on: ubuntu-latest
    name: update-chinadns-ng-all-arch
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        run: |
          cd && mkdir -p pack && cd pack
          sudo timedatectl set-timezone "$TZ"

      - name: Check version and update all architectures
        run: |
          cd $GITHUB_WORKSPACE/chinadns-ng
          
          Old_PKG_VERSION=$(sed -n '/^PKG_VERSION:=/p' Makefile | awk -F '=' '{print $2}')
          
          # Fetch releases with better error handling
          api_response=$(curl -sL "https://api.github.com/repos/zfl9/chinadns-ng/releases")
          
          # Check if API response is a valid array
          if echo "$api_response" | jq -e 'type=="array"' > /dev/null 2>&1; then
            # Extract latest non-prerelease version
            New_PKG_VERSION=$(echo "$api_response" | jq -r 'map(select(.prerelease|not)) | first | .tag_name' | sed -e 's/^v//')
            
            # Verify we got a valid version
            if [ -z "$New_PKG_VERSION" ] || [ "$New_PKG_VERSION" = "null" ]; then
              echo "❌ Failed to extract version from GitHub API"
              echo "CHINADNS_UPDATED=false" >> $GITHUB_ENV
              exit 0
            fi
          else
            echo "❌ Error: Unexpected API response (not an array)"
            echo "API Response: $(echo "$api_response" | head -c 500)"
            echo "This might be due to rate limiting or API issues. Exiting gracefully."
            echo "CHINADNS_UPDATED=false" >> $GITHUB_ENV
            exit 0
          fi
          
          echo "chinadns-ng当前版本: $Old_PKG_VERSION"
          echo "chinadns-ng最新版本: $New_PKG_VERSION"
          
          if [ "$Old_PKG_VERSION" != "$New_PKG_VERSION" ]; then
            echo "检测到新版本，开始更新所有架构..."
            
            sed -i "/^PKG_VERSION:=/c PKG_VERSION:=$New_PKG_VERSION" Makefile
            echo "CHINADNS_UPDATED=true" >> $GITHUB_ENV
            echo "CHINADNS_VERSION=$New_PKG_VERSION" >> $GITHUB_ENV
            
            cd ~/pack && mkdir -p chinadns-ng && cd chinadns-ng
            
            # 定义所有架构和对应的哈希行
            declare -A arch_files=(
              [12]="chinadns-ng+wolfssl@aarch64-linux-musl@generic+v8a@fast+lto"
              [15]="chinadns-ng+wolfssl_noasm@aarch64-linux-musl@generic+v8a@fast+lto"
              [21]="chinadns-ng+wolfssl@arm-linux-musleabi@generic+v6+soft_float@fast+lto"
              [24]="chinadns-ng+wolfssl@arm-linux-musleabihf@generic+v7a@fast+lto"
              [28]="chinadns-ng+wolfssl@mips-linux-musl@mips32+soft_float@fast+lto"
              [31]="chinadns-ng+wolfssl@mipsel-linux-musl@mips32+soft_float@fast+lto"
              [34]="chinadns-ng+wolfssl@mips64-linux-musl@mips64+soft_float@fast+lto"
              [37]="chinadns-ng+wolfssl@i386-linux-musl@i686@fast+lto"
              [40]="chinadns-ng+wolfssl@x86_64-linux-musl@x86_64@fast+lto"
            )
            
            FAILED_DOWNLOADS=0
            
            for hash_line in "${!arch_files[@]}"; do
              file_name="${arch_files[$hash_line]}"
              echo "处理架构文件: $file_name (行号: $hash_line)"

              # Download with version prefix 'v'
              DOWNLOAD_URL="https://github.com/zfl9/chinadns-ng/releases/download/v${New_PKG_VERSION}/${file_name}"
              echo "下载地址: $DOWNLOAD_URL"
              
              if wget -q "$DOWNLOAD_URL"; then
                if [ -f "$file_name" ]; then
                  PKG_HASH=$(sha256sum "$file_name" | awk '{print $1}')
                  echo "✅ $file_name 哈希值: $PKG_HASH"

                  cd $GITHUB_WORKSPACE/chinadns-ng
                  if [ "$hash_line" -eq 12 ] || [ "$hash_line" -eq 15 ] || [ "$hash_line" -eq 21 ] || [ "$hash_line" -eq 24 ]; then
                    # aarch64 和 arm 架构使用4个空格缩进
                    sed -i "${hash_line}c\    PKG_HASH:=$PKG_HASH" Makefile
                  else
                    sed -i "${hash_line}c\  PKG_HASH:=$PKG_HASH" Makefile
                  fi
                  
                  cd ~/pack/chinadns-ng
                else
                  echo "❌ 下载后文件不存在: $file_name"
                  FAILED_DOWNLOADS=$((FAILED_DOWNLOADS + 1))
                fi
              else
                echo "❌ 下载失败: $file_name"
                FAILED_DOWNLOADS=$((FAILED_DOWNLOADS + 1))
              fi
            done
            
            if [ $FAILED_DOWNLOADS -gt 0 ]; then
              echo "⚠️  警告: $FAILED_DOWNLOADS 个文件下载失败"
              echo "CHINADNS_UPDATED=false" >> $GITHUB_ENV
              exit 1
            fi
            
            echo "✅ 所有架构文件哈希更新完成"
          else
            echo "chinadns-ng版本为最新版本,无需更新"
            echo "CHINADNS_UPDATED=false" >> $GITHUB_ENV
          fi

      - name: Commit and Push chinadns-ng Changes
        if: env.CHINADNS_UPDATED == 'true'
        run: |
          cd $GITHUB_WORKSPACE

          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"

          if [ -n "$(git status --porcelain)" ]; then
            echo "检测到chinadns-ng文件变更，准备提交..."
            git add chinadns-ng/Makefile
            git commit -m "chinadns-ng: update to $CHINADNS_VERSION"
            git push origin main
            echo "✅ 已成功提交并推送 chinadns-ng 更改到版本 $CHINADNS_VERSION"
          else
            echo "没有检测到chinadns-ng文件变更"
          fi
