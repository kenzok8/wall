name: "gn auto update"
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: "0 0 * * 0"
env:
  TZ: Asia/Shanghai

jobs:
  job_init:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        run: |
          sudo timedatectl set-timezone "$TZ"

      - name: Delete workflow runs
        continue-on-error: true
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 1
        
      - name: SSH connection to Actions
        uses: kenzok78/ssh-action@master
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')

  job_auto_update_gn:
    if: ${{ always() }}
    needs: job_init
    runs-on: ubuntu-latest
    name: update-gn-package
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        run: |
          cd && mkdir -p pack && cd pack
          sudo timedatectl set-timezone "$TZ"
          sudo apt-get update && sudo apt-get install -y zstd git tar

      - name: Check gn version
        id: check
        run: |
          cd $GITHUB_WORKSPACE/gn
          Old_PKG_VERSION=$(sed -n '/^PKG_SOURCE_VERSION:=/p' Makefile | awk -F '=' '{print $2}')
          Old_PKG_DATE=$(sed -n '/^PKG_SOURCE_DATE:=/p' Makefile | awk -F '=' '{print $2}')
          New_PKG_VERSION=$(git ls-remote https://gn.googlesource.com/gn.git refs/heads/main | cut -f1)
          New_PKG_DATE=$(date +%Y-%m-%d)

          echo "当前版本: ${Old_PKG_VERSION:0:8} 日期: $Old_PKG_DATE"
          echo "最新版本: ${New_PKG_VERSION:0:8} 日期: $New_PKG_DATE"

          if [ "$Old_PKG_VERSION" = "$New_PKG_VERSION" ]; then
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "gn 版本未变化，无需更新"
          else
            echo "New_PKG_VERSION=$New_PKG_VERSION" >> $GITHUB_OUTPUT
            echo "New_PKG_DATE=$New_PKG_DATE" >> $GITHUB_OUTPUT
            echo "status=success" >> $GITHUB_OUTPUT
          fi

      - name: Update gn & Calculate Hash
        if: steps.check.outputs.status == 'success'
        run: |
          cd ~/pack
          # 克隆指定 commit
          git clone https://gn.googlesource.com/gn.git gn-src
          cd gn-src
          git checkout ${{ steps.check.outputs.New_PKG_VERSION }}
          cd ..

          # 打包成 .tar.zst
          TARFILE=gn-${{ steps.check.outputs.New_PKG_DATE }}~${{ steps.check.outputs.New_PKG_VERSION:0:8 }}.tar.zst
          tar --zstd -cf $TARFILE gn-src

          # 计算 sha256
          HASH=$(sha256sum $TARFILE | awk '{print $1}')
          echo "计算得到新 HASH: $HASH"

          # 更新 Makefile
          cd $GITHUB_WORKSPACE/gn
          sed -i "/^PKG_SOURCE_VERSION:=/c\PKG_SOURCE_VERSION:=${{ steps.check.outputs.New_PKG_VERSION }}" Makefile
          sed -i "/^PKG_SOURCE_DATE:=/c\PKG_SOURCE_DATE:=${{ steps.check.outputs.New_PKG_DATE }}" Makefile
          if grep -q "^PKG_MIRROR_HASH:=" Makefile; then
            sed -i "/^PKG_MIRROR_HASH:=/c\PKG_MIRROR_HASH:=$HASH" Makefile
          else
            echo "PKG_MIRROR_HASH:=$HASH" >> Makefile
          fi

      - name: Commit & Push
        if: steps.check.outputs.status == 'success'
        run: |
          cd $GITHUB_WORKSPACE
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add gn/Makefile
          git commit -m "gn: update to ${{ steps.check.outputs.New_PKG_VERSION:0:8 }}"
          git push
