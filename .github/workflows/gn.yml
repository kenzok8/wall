name: "gn auto update"
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: "0 0 * * 0"
env:
  TZ: Asia/Shanghai

jobs:
  job_auto_update_gn:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Set timezone & install zstd
        run: |
          sudo timedatectl set-timezone "$TZ"
          sudo apt-get update -y
          sudo apt-get install -y zstd

      - name: 获取 Makefile 旧版本信息
        id: oldver
        run: |
          cd $GITHUB_WORKSPACE/gn
          echo "old_ver=$(sed -n '/^PKG_SOURCE_VERSION:=/p' Makefile | awk -F '=' '{print $2}')" >> $GITHUB_OUTPUT
          echo "old_date=$(sed -n '/^PKG_SOURCE_DATE:=/p' Makefile | awk -F '=' '{print $2}')" >> $GITHUB_OUTPUT

      - name: 获取 gn 最新 commit
        id: newver
        run: |
          NEW_VER=$(git ls-remote https://gn.googlesource.com/gn.git refs/heads/main | cut -f1)
          NEW_DATE=$(date +%Y-%m-%d)
          echo "new_ver=$NEW_VER" >> $GITHUB_OUTPUT
          echo "new_date=$NEW_DATE" >> $GITHUB_OUTPUT

      - name: 判断是否需要更新
        id: need_update
        run: |
          if [ "${{ steps.oldver.outputs.old_ver }}" = "${{ steps.newver.outputs.new_ver }}" ]; then
            echo "need=false" >> $GITHUB_OUTPUT
            echo "gn为最新，无需更新"
          else
            echo "need=true" >> $GITHUB_OUTPUT
            echo "有新版本，需更新"
          fi

      - name: 克隆并打包 gn
        if: steps.need_update.outputs.need == 'true'
        id: pack
        run: |
          mkdir -p ~/pack && cd ~/pack
          git clone https://gn.googlesource.com/gn.git gn-source
          cd gn-source
          git checkout ${{ steps.newver.outputs.new_ver }}
          COMMIT_POSITION=$(git rev-list --count HEAD)
          rm -rf .git
          cd ..
          TAR_NAME="gn-${{ steps.newver.outputs.new_date }}~${{ steps.newver.outputs.new_ver:0:8 }}.tar.zst"
          tar -cf - gn-source/ | zstd -19 -T0 > $TAR_NAME
          PKG_HASH=$(sha256sum $TAR_NAME | awk '{print $1}')
          echo "tar_name=$TAR_NAME" >> $GITHUB_OUTPUT
          echo "pkg_hash=$PKG_HASH" >> $GITHUB_OUTPUT
          echo "commit_position=$COMMIT_POSITION" >> $GITHUB_OUTPUT

      - name: 拷贝包到 feeds/downloads
        if: steps.need_update.outputs.need == 'true'
        run: |
          cp ~/pack/${{ steps.pack.outputs.tar_name }} $GITHUB_WORKSPACE/feeds/downloads/

      - name: 更新 Makefile
        if: steps.need_update.outputs.need == 'true'
        run: |
          cd $GITHUB_WORKSPACE/gn
          sed -i "/^PKG_SOURCE_VERSION:=/c\PKG_SOURCE_VERSION:=${{ steps.newver.outputs.new_ver }}" Makefile
          sed -i "/^PKG_SOURCE_DATE:=/c\PKG_SOURCE_DATE:=${{ steps.newver.outputs.new_date }}" Makefile
          sed -i "/^PKG_MIRROR_HASH:=/c\PKG_MIRROR_HASH:=${{ steps.pack.outputs.pkg_hash }}" Makefile

      - name: 更新 last_commit_position.h
        if: steps.need_update.outputs.need == 'true'
        run: |
          COMMIT_POSITION_FILE="$GITHUB_WORKSPACE/gn/src/out/last_commit_position.h"
          if [ -f "$COMMIT_POSITION_FILE" ]; then
            sed -i "6s/#define LAST_COMMIT_POSITION_NUM .*/#define LAST_COMMIT_POSITION_NUM ${{ steps.pack.outputs.commit_position }}/" "$COMMIT_POSITION_FILE"
            sed -i "7s/#define LAST_COMMIT_POSITION .*/#define LAST_COMMIT_POSITION \"${{ steps.pack.outputs.commit_position }} (${{ steps.newver.outputs.new_ver:0:12 }})\"/" "$COMMIT_POSITION_FILE"
          fi

      - name: Commit and Push gn Changes
        if: steps.need_update.outputs.need == 'true'
        run: |
          cd $GITHUB_WORKSPACE
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add gn/Makefile
          git add gn/src/out/last_commit_position.h || true
          COMMIT_MSG="gn: auto update to ${{ steps.newver.outputs.new_ver:0:8 }}"
          git commit -m "$COMMIT_MSG"
          git push origin main
          echo "✅ 已成功提交并推送 gn 更改: $COMMIT_MSG"

      - name: 输出更新日志
        if: steps.need_update.outputs.need == 'true'
        run: |
          echo "GN已更新:"
          echo "新版本: ${{ steps.newver.outputs.new_ver }}"
          echo "日期: ${{ steps.newver.outputs.new_date }}"
          echo "hash: ${{ steps.pack.outputs.pkg_hash }}"
          echo "commit position: ${{ steps.pack.outputs.commit_position }}"
